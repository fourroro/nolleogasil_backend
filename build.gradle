plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    /*id'com.google.osdetector' version '1.7.3'*/
}

group = 'com.fourroro'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

springBoot {
    mainClass = 'com.fourroro.nolleogasil_backend.NolleogasilBackendApplication'
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

/*	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.7.11'  // Spring Boot OAuth2 Client
	implementation 'org.springframework.boot:spring-boot-starter-security:2.7.5'        // Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-webflux:2.7.13'*/
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    //redis 의존성 추가
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //스프링 시큐리티
/*	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'*/
//	//스프링 시큐리티 + Oauth2 client
//	implementation("org.springframework.boot:spring-boot-starter-oauth2-authorization-server:3.1.2")

    //webscoket 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.3-1'
    //implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.3-1'

    //implementation group: 'org.springframework.boot', name: 'spring-boot-starter-reactor-netty', version: '2.4.6'
    // RabbitMQ
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.104.Final:osx-aarch_64'
    //외부 브로커를 사용하기 위해
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty:3.0.0'

    //feign client dependency
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:2021.0.5")
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    // Gradle
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

    // Excel parsing
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

    // Json
    implementation 'org.json:json:20210307'
}


tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

//.jar 생성 차단
tasks.named("jar"){
    enabled=false
}
